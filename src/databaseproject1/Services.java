/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package databaseproject1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.util.Timer;
import java.util.TimerTask;
import javax.management.modelmbean.ModelMBean;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.TableView;
import javax.swing.text.html.HTML;

/**
 *
 * @author CompuMall
 */
public class Services extends javax.swing.JFrame {

    Connection con;
    int currRow;
    int ServiceSelectedRowID;

    /**
     * Creates new form Services
     */
    public Services() {
        initComponents();
        createConnection();
        this.setLocationRelativeTo(null);
    }

    void createConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "khashana44Wlv");
//          THIS HOW TO CREATE STATMENT AND GET DATA  
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from services");
//            while there is one more than one row
            while (rs.next()) {
                String serviceId = rs.getString("serviceID");
                String type = rs.getString("serviceType");
                String date = rs.getString("serviceDate");
                String cost = rs.getString("serviceCost");
                String carId = rs.getString("carID");
                String stat = rs.getString("statu");

                System.out.println(serviceId + " | " + type + " | " + date + " | " + cost + " | " + carId + " | " + stat);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DatabaseProject1.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DatabaseProject1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addNewServiceBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ServicesTablev = new javax.swing.JTable();
        editCurrServiceBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        refreshServicesTable = new javax.swing.JButton();
        ResetAddNewServiceInputsBtn = new javax.swing.JButton();
        deleteCurrServiceBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        alertsLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        serviceDate = new javax.swing.JTextField();
        serviceType = new javax.swing.JComboBox<>();
        serviceCost = new javax.swing.JTextField();
        serviceStatu = new javax.swing.JComboBox<>();
        carID = new javax.swing.JTextField();
        editServiceType = new javax.swing.JComboBox<>();
        editServiceDate = new javax.swing.JTextField();
        editServiceCost = new javax.swing.JTextField();
        editServiceStatu = new javax.swing.JComboBox<>();
        editCarID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(153, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Services Dashboard");
        jLabel1.setAlignmentX(0.5F);

        jSeparator1.setBackground(new java.awt.Color(0, 153, 153));
        jSeparator1.setForeground(new java.awt.Color(0, 153, 153));

        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Type");

        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Date");

        addNewServiceBtn.setText("Add");
        addNewServiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewServiceBtn(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setForeground(new java.awt.Color(204, 204, 204));

        ServicesTablev.setBackground(new java.awt.Color(51, 51, 51));
        ServicesTablev.setForeground(new java.awt.Color(204, 204, 204));
        ServicesTablev.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Type", "Date", "Cost", "Statu", "Car ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ServicesTablev.setGridColor(new java.awt.Color(204, 204, 204));
        ServicesTablev.setSelectionBackground(new java.awt.Color(51, 51, 51));
        ServicesTablev.setSelectionForeground(new java.awt.Color(204, 204, 204));
        ServicesTablev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ServicesTablevMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ServicesTablev);

        editCurrServiceBtn.setText("Edit");
        editCurrServiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCurrServiceBtn(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Type");

        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Date");

        refreshServicesTable.setText("Refresh");
        refreshServicesTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshServicesTableActionPerformed(evt);
            }
        });

        ResetAddNewServiceInputsBtn.setText("Reset");
        ResetAddNewServiceInputsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetAddNewServiceInputsBtn(evt);
            }
        });

        deleteCurrServiceBtn.setText("Delete");
        deleteCurrServiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCurrServiceBtn(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Cost");

        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Cost");

        alertsLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        alertsLabel.setForeground(new java.awt.Color(102, 153, 255));

        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Statu");

        jLabel11.setForeground(new java.awt.Color(204, 204, 204));
        jLabel11.setText("Car ID");

        jLabel12.setForeground(new java.awt.Color(204, 204, 204));
        jLabel12.setText("Statu");

        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("Car ID");

        serviceDate.setBackground(new java.awt.Color(51, 51, 51));
        serviceDate.setForeground(new java.awt.Color(204, 204, 204));
        serviceDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3, true));

        serviceType.setBackground(new java.awt.Color(51, 51, 51));
        serviceType.setForeground(new java.awt.Color(204, 204, 204));
        serviceType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "unselected", "Repair", "Maintaince", "Care" }));

        serviceCost.setBackground(new java.awt.Color(51, 51, 51));
        serviceCost.setForeground(new java.awt.Color(204, 204, 204));
        serviceCost.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3, true));

        serviceStatu.setBackground(new java.awt.Color(51, 51, 51));
        serviceStatu.setForeground(new java.awt.Color(204, 204, 204));
        serviceStatu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "unselected", "in progress", "Done", "Canceled" }));

        carID.setBackground(new java.awt.Color(51, 51, 51));
        carID.setForeground(new java.awt.Color(204, 204, 204));
        carID.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3, true));
        carID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carIDActionPerformed(evt);
            }
        });

        editServiceType.setBackground(new java.awt.Color(51, 51, 51));
        editServiceType.setForeground(new java.awt.Color(204, 204, 204));
        editServiceType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "unselected", "Repair", "Maintaince", "Care" }));

        editServiceDate.setBackground(new java.awt.Color(51, 51, 51));
        editServiceDate.setForeground(new java.awt.Color(204, 204, 204));
        editServiceDate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3, true));

        editServiceCost.setBackground(new java.awt.Color(51, 51, 51));
        editServiceCost.setForeground(new java.awt.Color(204, 204, 204));
        editServiceCost.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3, true));

        editServiceStatu.setBackground(new java.awt.Color(51, 51, 51));
        editServiceStatu.setForeground(new java.awt.Color(204, 204, 204));
        editServiceStatu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "unselected", "in progress", "Done", "Canceled" }));

        editCarID.setBackground(new java.awt.Color(51, 51, 51));
        editCarID.setForeground(new java.awt.Color(204, 204, 204));
        editCarID.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3, true));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(alertsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                        .addComponent(refreshServicesTable, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addNewServiceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ResetAddNewServiceInputsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(serviceDate)
                            .addComponent(serviceType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(serviceCost)
                            .addComponent(serviceStatu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(carID))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(editCurrServiceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteCurrServiceBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(editServiceType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editServiceDate)
                            .addComponent(editServiceCost)
                            .addComponent(editServiceStatu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editCarID))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editServiceType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editServiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editServiceCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serviceStatu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editServiceStatu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(carID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editCarID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewServiceBtn)
                    .addComponent(ResetAddNewServiceInputsBtn)
                    .addComponent(editCurrServiceBtn)
                    .addComponent(deleteCurrServiceBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(refreshServicesTable, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alertsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewServiceBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewServiceBtn
        try {
            //  Adding car Operation
            String type = serviceType.getSelectedItem().toString();
            String date = serviceDate.getText();
            String cost = serviceCost.getText();
            String statu = serviceStatu.getSelectedItem().toString();
            String carId = carID.getText();
            Statement stmt = con.createStatement();
            String addCar = "INSERT INTO services (serviceType, serviceDate, serviceCost, statu, carID) VALUES ('" + type + "', '" + date + "', '" + cost + "', '" + statu + "', '" + carId + "')";
            try {
                stmt.execute(addCar);
            } catch (SQLException ex) {
                alertsLabel.setText("There's no Car with that ID!");
                Timer timer = new Timer();
                timer.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        alertsLabel.setText("");
                    }
                }, 2000);
            }

            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(DB2.class.getName()).log(Level.SEVERE, null, ex);
        }
        refreshServicesTableActionPerformed(evt);
    }//GEN-LAST:event_addNewServiceBtn

    private void ServicesTablevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ServicesTablevMouseClicked
        // TODO add your handling code here:
        DefaultTableModel servicesTable = (DefaultTableModel) ServicesTablev.getModel();
        //        currRow = CarsTablev.getSelectedRow();
        String editServiceTypee = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 1);
        String editServiceDatee = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 2);
        String editServiceCostt = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 3);
        String editServiceStatuu = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 4);
        String editCarId = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 5);
        ServiceSelectedRowID = Integer.parseInt((String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 0));
        editServiceType.setSelectedItem(editServiceTypee);
        editServiceDate.setText(editServiceDatee);
        editServiceCost.setText(editServiceCostt);
        editServiceStatu.setSelectedItem(editServiceStatuu);
        editCarID.setText(editCarId);
    }//GEN-LAST:event_ServicesTablevMouseClicked

    private void editCurrServiceBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCurrServiceBtn
        try {
            String type = editServiceType.getSelectedItem().toString();
            String date = editServiceDate.getText();
            String cost = editServiceCost.getText();
            String statu = editServiceStatu.getSelectedItem().toString();
            String carId = editCarID.getText();
            Statement stmt = con.createStatement();
            String editService = "UPDATE services SET serviceType = '" + type + "', serviceDate = '" + date + "', serviceCost = '" + cost + "', statu = '" + statu + "', carID = '" + carId + "' WHERE serviceID = '" + ServiceSelectedRowID + "'";
            try {
                stmt.execute(editService);
                editServiceType.setSelectedItem("unselected");
                editServiceDate.setText("");
                editServiceCost.setText("");
                editServiceStatu.setSelectedItem("unselected");
                editCarID.setText("");
                ServicesTablev.clearSelection();
                ServiceSelectedRowID = -1;
            } catch (SQLException ex) {
                alertsLabel.setText("There's no Car with that ID!");
                Timer timer = new Timer();
                timer.schedule(new TimerTask() {
                    @Override
                    public void run() {
                        alertsLabel.setText("");
                    }
                }, 2000);
            }

            refreshServicesTableActionPerformed(evt);
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(DB2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editCurrServiceBtn

    private void refreshServicesTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshServicesTableActionPerformed
        DefaultTableModel ServicesTable = (DefaultTableModel) ServicesTablev.getModel();
        try {
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from services");
            int rowCount = -1;
            while (rs.next()) {
                rowCount++;
                String serviceId = rs.getString("serviceID");
                String type = rs.getString("serviceType");
                String date = rs.getString("serviceDate");
                String cost = rs.getString("serviceCost");
                String carId = rs.getString("carID");
                String statu = rs.getString("statu");
                ServicesTable.setRowCount(rowCount);
                ServicesTable.addRow(new Object[]{serviceId, type, date, cost, statu, carId});
            }
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(DB2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshServicesTableActionPerformed

    private void ResetAddNewServiceInputsBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetAddNewServiceInputsBtn
        // TODO add your handling code here:
        serviceDate.setText("");
        serviceType.setSelectedItem("unselected");
        serviceCost.setText("");
        serviceStatu.setSelectedItem("unselected");
        carID.setText("");
    }//GEN-LAST:event_ResetAddNewServiceInputsBtn

    private void deleteCurrServiceBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCurrServiceBtn
        //        int currRow = adminsTablev.getSelectedRow();
        String getRowID = (String) ServicesTablev.getValueAt(ServicesTablev.getSelectedRow(), 0);
        Statement stmt;
        try {
            stmt = con.createStatement();
            String deleteService = "Delete from services where serviceID = '" + getRowID + "'";
            stmt.executeUpdate(deleteService);
            refreshServicesTableActionPerformed(evt);
            serviceDate.setText("");
            serviceType.setSelectedItem("unselected");
            serviceCost.setText("");
            serviceStatu.setSelectedItem("unselected");
            carID.setText("");
            ServicesTablev.clearSelection();
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(DB2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteCurrServiceBtn

    private void carIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Services.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Services.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Services.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Services.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Services().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ResetAddNewServiceInputsBtn;
    private javax.swing.JTable ServicesTablev;
    private javax.swing.JButton addNewServiceBtn;
    private javax.swing.JLabel alertsLabel;
    private javax.swing.JTextField carID;
    private javax.swing.JButton deleteCurrServiceBtn;
    private javax.swing.JTextField editCarID;
    private javax.swing.JButton editCurrServiceBtn;
    private javax.swing.JTextField editServiceCost;
    private javax.swing.JTextField editServiceDate;
    private javax.swing.JComboBox<String> editServiceStatu;
    private javax.swing.JComboBox<String> editServiceType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton refreshServicesTable;
    private javax.swing.JTextField serviceCost;
    private javax.swing.JTextField serviceDate;
    private javax.swing.JComboBox<String> serviceStatu;
    private javax.swing.JComboBox<String> serviceType;
    // End of variables declaration//GEN-END:variables
}
