/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package databaseproject1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.util.Timer;
import java.util.TimerTask;
import javax.management.modelmbean.ModelMBean;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.text.TableView;
import javax.swing.text.html.HTML;

/**
 *
 * @author CompuMall
 */
public class FullData extends javax.swing.JFrame {

    Connection con;
    int currRow;
    int ServiceSelectedRowID;

    /**
     * Creates new form FullData
     */
    public FullData() {
        initComponents();
        createConnection();
        this.setLocationRelativeTo(null);
    }

    void createConnection() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/mydb", "root", "khashana44Wlv");
//          THIS HOW TO CREATE STATMENT AND GET DATA  
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("select * from services");
//            while there is one more than one row
            while (rs.next()) {
                String serviceId = rs.getString("serviceID");
                String type = rs.getString("serviceType");
                String date = rs.getString("serviceDate");
                String cost = rs.getString("serviceCost");
                String carId = rs.getString("carID");
                String stat = rs.getString("statu");

                System.out.println(serviceId + " | " + type + " | " + date + " | " + cost + " | " + carId + " | " + stat);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DatabaseProject1.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DatabaseProject1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        refreshFullDataTable = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        FullDataTablev = new javax.swing.JTable();
        customersBtn = new javax.swing.JButton();
        carsBtn = new javax.swing.JButton();
        servicesBtn = new javax.swing.JButton();
        adminBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        refreshFullDataTable.setText("Refresh");
        refreshFullDataTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshFullDataTableActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setForeground(new java.awt.Color(204, 204, 204));

        FullDataTablev.setBackground(new java.awt.Color(51, 51, 51));
        FullDataTablev.setForeground(new java.awt.Color(204, 204, 204));
        FullDataTablev.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone", "Car Brand", "Car Model", "Service Type", "Service Date", "Service Cost", "Service Statu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FullDataTablev.setGridColor(new java.awt.Color(204, 204, 204));
        FullDataTablev.setSelectionBackground(new java.awt.Color(51, 51, 51));
        FullDataTablev.setSelectionForeground(new java.awt.Color(204, 204, 204));
        FullDataTablev.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FullDataTablevMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(FullDataTablev);

        customersBtn.setText("Customers");
        customersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersBtnActionPerformed(evt);
            }
        });

        carsBtn.setText("Cars");
        carsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carsBtnActionPerformed(evt);
            }
        });

        servicesBtn.setText("Services");
        servicesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                servicesBtnActionPerformed(evt);
            }
        });

        adminBtn.setText("Admins");
        adminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(adminBtn)
                .addGap(18, 18, 18)
                .addComponent(customersBtn)
                .addGap(18, 18, 18)
                .addComponent(carsBtn)
                .addGap(18, 18, 18)
                .addComponent(servicesBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshFullDataTable, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customersBtn)
                    .addComponent(carsBtn)
                    .addComponent(servicesBtn)
                    .addComponent(adminBtn)
                    .addComponent(refreshFullDataTable, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshFullDataTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshFullDataTableActionPerformed
        DefaultTableModel ServicesTable = (DefaultTableModel) FullDataTablev.getModel();
        try {
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT customers.customerID, customers.name, customers.phone, \n"
                    + "cars.carBrand, cars.carModel, \n"
                    + "services.serviceType, services.serviceDate, services.serviceCost, services.statu\n"
                    + "FROM \n"
                    + "	customers\n"
                    + "JOIN \n"
                    + "	cars ON customers.customerID = cars.ownerID\n"
                    + "JOIN \n"
                    + "    services ON cars.carID = services.carID;");
            int rowCount = -1;
            while (rs.next()) {
                rowCount++;
                String customerID = rs.getString("customerID");
                String customerName = rs.getString("name");
                String customerPhone = rs.getString("phone");
                String carBrand = rs.getString("carBrand");
                String carModel = rs.getString("carModel");
                String type = rs.getString("serviceType");
                String date = rs.getString("serviceDate");
                String cost = rs.getString("serviceCost");
                String statu = rs.getString("statu");
                ServicesTable.setRowCount(rowCount);
                ServicesTable.addRow(new Object[]{ customerID, customerName, customerPhone, carBrand, carModel , type, date, cost, statu});
            }
            stmt.close();
        } catch (SQLException ex) {
            Logger.getLogger(DB2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_refreshFullDataTableActionPerformed

    private void FullDataTablevMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FullDataTablevMouseClicked
        //        // TODO add your handling code here:
        //        DefaultTableModel servicesTable = (DefaultTableModel) ServicesTablev.getModel();
        //        //        currRow = CarsTablev.getSelectedRow();
        //        String editServiceTypee = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 1);
        //        String editServiceDatee = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 2);
        //        String editServiceCostt = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 3);
        //        String editServiceStatuu = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 4);
        //        String editCarId = (String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 5);
        //        ServiceSelectedRowID = Integer.parseInt((String) servicesTable.getValueAt(ServicesTablev.getSelectedRow(), 0));
        //        editServiceType.setSelectedItem(editServiceTypee);
        //        editServiceDate.setText(editServiceDatee);
        //        editServiceCost.setText(editServiceCostt);
        //        editServiceStatu.setSelectedItem(editServiceStatuu);
        //        editCarID.setText(editCarId);
    }//GEN-LAST:event_FullDataTablevMouseClicked

    private void adminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminBtnActionPerformed
        // TODO add your handling code here:
        DB2 adminsC = new DB2();
        adminsC.setVisible(true);
        dispose();
    }//GEN-LAST:event_adminBtnActionPerformed

    private void customersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersBtnActionPerformed
        // TODO add your handling code here:
        Customers cust = new Customers();
        cust.setVisible(true);
        dispose();
    }//GEN-LAST:event_customersBtnActionPerformed

    private void carsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carsBtnActionPerformed
        // TODO add your handling code here:
        Cars carsC = new Cars();
        carsC.setVisible(true);
        dispose();
    }//GEN-LAST:event_carsBtnActionPerformed

    private void servicesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_servicesBtnActionPerformed
        // TODO add your handling code here:
        Services servsC = new Services();
        servsC.setVisible(true);
        dispose();
    }//GEN-LAST:event_servicesBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FullData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FullData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FullData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FullData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FullData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FullDataTablev;
    private javax.swing.JButton adminBtn;
    private javax.swing.JButton carsBtn;
    private javax.swing.JButton customersBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshFullDataTable;
    private javax.swing.JButton servicesBtn;
    // End of variables declaration//GEN-END:variables
}
